1 - ESP32 se conectar a um servidor e imprimir o valor de uma variável no servidor, usando uma conexão Wi-Fi

#include <WiFi.h>

// Substitua com o nome da sua rede Wi-Fi e senha
const char* ssid = "nome_da_rede";
const char* password = "senha_da_rede";

// Substitua com o endereço IP do seu servidor
const char* server_ip = "192.168.1.100";

// Substitua com a porta do seu servidor
const int server_port = 80;

// Substitua com o nome da variável que você quer imprimir no servidor
const char* variable_name = "exemplo_variavel";
// Substitua com o valor da variável que você quer imprimir no servidor
const char* variable_value = "42";

void setup() {
  Serial.begin(9600);
  delay(1000);

  // Conecte-se à rede Wi-Fi
  Serial.print("Conectando-se à rede ");
  Serial.print(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Conectado à rede ");
  Serial.println(ssid);
}

void loop() {
  // Crie uma conexão TCP com o servidor
  WiFiClient client;
  if (!client.connect(server_ip, server_port)) {
    Serial.println("Falha na conexão com o servidor");
    delay(5000);
    return;
  }

  // Crie uma solicitação HTTP para o servidor
  String request = "GET /update?" + String(variable_name) + "=" + String(variable_value) + " HTTP/1.1\r\n" +
                   "Host: " + String(server_ip) + ":" + String(server_port) + "\r\n" +
                   "Connection: close\r\n" +
                   "\r\n";
  Serial.println("Enviando solicitação HTTP:");
  Serial.println(request);

  // Envie a solicitação HTTP para o servidor
  client.print(request);

  // Espere até que o servidor responda
  while (client.connected()) {
    if (client.available()) {
      String response = client.readStringUntil('\r');
      Serial.println(response);
    }
  }

  // Feche a conexão com o servidor
  client.stop();

  // Espere 5 segundos antes de enviar a próxima solicitação
  delay(5000);
}

Explicação - Neste exemplo, o ESP32 se conecta à rede Wi-Fi especificada na variável ssid e password, e depois se conecta a um servidor com o endereço IP especificado na variável server_ip e porta especificada na variável server_port. Ele então cria uma solicitação HTTP GET com o nome da variável especificado na variável variable_name e o valor especificado na variável variable_value, e envia a solicitação para o servidor. O servidor deve ser capaz de ler a solicitação e atualizar a variável com o novo valor. O código aguarda a resposta do servidor e, em seguida, fecha a conexão antes de aguardar por 5 segundos e repetir o processo.
